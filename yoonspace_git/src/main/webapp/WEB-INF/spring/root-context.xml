<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">
	
	<!-- Root Context: defines shared resources visible to all other web components -->
		
	<!-- db.properties의 내용을 읽어서 db작업을 위해 세팅하기 -->
	<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location">
			<value>classpath:db.properties</value>
		</property>
	</bean>
	
	<!-- db.properties로부터 설정값을 읽어서 드라이버를 로딩하는 작업 -->
	<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="${driver}"></property>
		<property name="url" value="${url}"></property>
		<property name="username" value="${user}"></property>
		<property name="password" value="${password}"></property>
	</bean>
	
	<!-- 트랜잭션 관리를 위한 bean -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
	</bean>
	
	<!-- MyBatis 사용을 위한 세팅작업을 하는 bean : 이전에 사용했던 ConnectionManager등이 했던 작업을 이제부터는 mybatis가 대신해준다.(SqlSessionFactory)-->
	<!-- Connection Pool : 기존에는 Connection을 매번 연결했다가 끊었다가 했지만, 여기서는 동시 접속수를 예상해서 해당 개수만큼 커넥션을 미리 만들어놓고, 각 사용자가 하나씩 끄고 반납하는 식으로 이루어진다. -->
	<!-- mybatis의 SqlSessionFactory가 Connection Pool을 알아서 관리해준다 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
		<property name="configLocation" value="classpath:mybatis-config.xml"></property>
	</bean>
	
	<!-- sqlSession -->
	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg index="0" name="sqlSessionFactory" ref="sqlSessionFactory"></constructor-arg>
	</bean>
	
	<!-- file IO -->
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="maxUploadSize" value="10485760"></property>
	</bean>
	
</beans>
